from Data import Data
from Population import Population
from constants import USAGE_MAP_FILE, PRODUCTION_MAP_FILE, COST_MAP_FILE
from plotter import plot_population_on_grid, plot_optimal_pareto_front, plot_non_dominated_solutions_on_grid, \
    plot_selected_solution_on_grid

# Initialisation des données
data = Data(USAGE_MAP_FILE, PRODUCTION_MAP_FILE, COST_MAP_FILE)

# Génération de la population
population = Population(data)
population.generate_initial_population()

# Affichage de la population initiale sur une grille et sur un graphe
plot_population_on_grid(population, data, "Population initiale de terrains")
plot_optimal_pareto_front(population, "Population initiale de terrains")

# Algorithme pour la création d'une frontière de Pareto optimale
population.run_pls_algorithm()

# Affichage de la population finale sur une grille
plot_population_on_grid(population, data, "Population finale de terrains")

# Affichage des solutions non dominées sur une grille
plot_non_dominated_solutions_on_grid(population, data, "Population non dominées de terrains")

# Affichage de la solution sélectionnée sur une grille
plot_selected_solution_on_grid(population, data, "Terrain sélectionné")

# Affichage de la frontière pareto optimale sur un graphe
plot_optimal_pareto_front(population, "Frontière pareto optimale")

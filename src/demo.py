from Data import Data
from Solution import *
from constants import USAGE_MAP_FILE, PRODUCTION_MAP_FILE, COST_MAP_FILE
from plotter import *


# ___________________________________________________________________
# _________________________DEMO FUNCTIONS_________________________________
# ___________________________________________________________________
def get_compactness(matrix):
    """"
    Sert à montrer le calcul de compacité
    Sert également à montrer qu'on obtient la même compacité pour une matrice
    et sa matrice réduite.
    """
    compactness = 0
    for i in range(len(matrix)):
        for j in range(len(matrix[0])):
            if matrix[i][j] == 1:
                nEight = 0
                for m in range(-1, 2):
                    for n in range(-1, 2):
                        if 0 <= i + m < len(matrix) and 0 <= j + n < len(matrix[0]):
                            if matrix[i + m][j + n] == 1 and (
                                    i + m != i or j + n != j):  # peut modifier le pas pour ça
                                nEight += 1 / 8
                compactness += nEight
    return compactness


def plot_example(solution: Solution):
    """
    Affiche un exemple de matrice de population et sa matrice réduite
    ainsi que leur compactness
    """
    mat_full = get_matrix_from_coords(solution.get_plots_list())
    mat_reduced = extract_smaller_matrix(mat_full)

    plot_matrix(mat_full, "Compacité= " + str(get_compactness(mat_full)))
    plot_matrix(mat_reduced, "Compacité= " + str(get_compactness(mat_reduced)))


# ___________________________________________________________________
# _________________________INIT_____________________________________
# ___________________________________________________________________

data = Data(USAGE_MAP_FILE, PRODUCTION_MAP_FILE, COST_MAP_FILE)
population = Population(data)
population.generate_initial_population()

# ___________________________________________________________________
# ____________________________MAIN___________________________________
# ___________________________________________________________________
plot_example(population.get_solutions()[5])
plt.show()
